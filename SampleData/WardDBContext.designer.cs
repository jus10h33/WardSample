#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WardDB")]
	public partial class WardDBContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertReportModel(ReportModel instance);
    partial void UpdateReportModel(ReportModel instance);
    partial void DeleteReportModel(ReportModel instance);
    partial void InsertReportReportItemModel(ReportReportItemModel instance);
    partial void UpdateReportReportItemModel(ReportReportItemModel instance);
    partial void DeleteReportReportItemModel(ReportReportItemModel instance);
    partial void InsertCustomerModel(CustomerModel instance);
    partial void UpdateCustomerModel(CustomerModel instance);
    partial void DeleteCustomerModel(CustomerModel instance);
    partial void InsertInvoiceModel(InvoiceModel instance);
    partial void UpdateInvoiceModel(InvoiceModel instance);
    partial void DeleteInvoiceModel(InvoiceModel instance);
    partial void InsertSampleModel(SampleModel instance);
    partial void UpdateSampleModel(SampleModel instance);
    partial void DeleteSampleModel(SampleModel instance);
    partial void InsertReportItemModel(ReportItemModel instance);
    partial void UpdateReportItemModel(ReportItemModel instance);
    partial void DeleteReportItemModel(ReportItemModel instance);
    partial void InsertReportItemTestModel(ReportItemTestModel instance);
    partial void UpdateReportItemTestModel(ReportItemTestModel instance);
    partial void DeleteReportItemTestModel(ReportItemTestModel instance);
    partial void InsertPastCropModel(PastCropModel instance);
    partial void UpdatePastCropModel(PastCropModel instance);
    partial void DeletePastCropModel(PastCropModel instance);
    partial void InsertSampleColumn(SampleColumn instance);
    partial void UpdateSampleColumn(SampleColumn instance);
    partial void DeleteSampleColumn(SampleColumn instance);
    partial void InsertSampleTypeModel(SampleTypeModel instance);
    partial void UpdateSampleTypeModel(SampleTypeModel instance);
    partial void DeleteSampleTypeModel(SampleTypeModel instance);
    partial void InsertSoilRecCropModel(SoilRecCropModel instance);
    partial void UpdateSoilRecCropModel(SoilRecCropModel instance);
    partial void DeleteSoilRecCropModel(SoilRecCropModel instance);
    partial void InsertSoilRecTypeModel(SoilRecTypeModel instance);
    partial void UpdateSoilRecTypeModel(SoilRecTypeModel instance);
    partial void DeleteSoilRecTypeModel(SoilRecTypeModel instance);
    partial void InsertSoilSampleModel(SoilSampleModel instance);
    partial void UpdateSoilSampleModel(SoilSampleModel instance);
    partial void DeleteSoilSampleModel(SoilSampleModel instance);
    partial void InsertSoilSampleRecModel(SoilSampleRecModel instance);
    partial void UpdateSoilSampleRecModel(SoilSampleRecModel instance);
    partial void DeleteSoilSampleRecModel(SoilSampleRecModel instance);
    partial void InsertSubSampleTypeModel(SubSampleTypeModel instance);
    partial void UpdateSubSampleTypeModel(SubSampleTypeModel instance);
    partial void DeleteSubSampleTypeModel(SubSampleTypeModel instance);
    partial void InsertSubSubSampleTypeModel(SubSubSampleTypeModel instance);
    partial void UpdateSubSubSampleTypeModel(SubSubSampleTypeModel instance);
    partial void DeleteSubSubSampleTypeModel(SubSubSampleTypeModel instance);
    #endregion
		
		public WardDBContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WardDBContext"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WardDBContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WardDBContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WardDBContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WardDBContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ReportModel> ReportModels
		{
			get
			{
				return this.GetTable<ReportModel>();
			}
		}
		
		public System.Data.Linq.Table<ReportReportItemModel> ReportReportItemModels
		{
			get
			{
				return this.GetTable<ReportReportItemModel>();
			}
		}
		
		public System.Data.Linq.Table<CustomerModel> CustomerModels
		{
			get
			{
				return this.GetTable<CustomerModel>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceModel> InvoiceModels
		{
			get
			{
				return this.GetTable<InvoiceModel>();
			}
		}
		
		public System.Data.Linq.Table<SampleModel> SampleModels
		{
			get
			{
				return this.GetTable<SampleModel>();
			}
		}
		
		public System.Data.Linq.Table<ReportItemModel> ReportItemModels
		{
			get
			{
				return this.GetTable<ReportItemModel>();
			}
		}
		
		public System.Data.Linq.Table<ReportItemTestModel> ReportItemTestModels
		{
			get
			{
				return this.GetTable<ReportItemTestModel>();
			}
		}
		
		public System.Data.Linq.Table<PastCropModel> PastCropModels
		{
			get
			{
				return this.GetTable<PastCropModel>();
			}
		}
		
		public System.Data.Linq.Table<SampleColumn> SampleColumns
		{
			get
			{
				return this.GetTable<SampleColumn>();
			}
		}
		
		public System.Data.Linq.Table<SampleTypeModel> SampleTypeModels
		{
			get
			{
				return this.GetTable<SampleTypeModel>();
			}
		}
		
		public System.Data.Linq.Table<SoilRecCropModel> SoilRecCropModels
		{
			get
			{
				return this.GetTable<SoilRecCropModel>();
			}
		}
		
		public System.Data.Linq.Table<SoilRecTypeModel> SoilRecTypeModels
		{
			get
			{
				return this.GetTable<SoilRecTypeModel>();
			}
		}
		
		public System.Data.Linq.Table<SoilSampleModel> SoilSampleModels
		{
			get
			{
				return this.GetTable<SoilSampleModel>();
			}
		}
		
		public System.Data.Linq.Table<SoilSampleRecModel> SoilSampleRecModels
		{
			get
			{
				return this.GetTable<SoilSampleRecModel>();
			}
		}
		
		public System.Data.Linq.Table<SubSampleTypeModel> SubSampleTypeModels
		{
			get
			{
				return this.GetTable<SubSampleTypeModel>();
			}
		}
		
		public System.Data.Linq.Table<SubSubSampleTypeModel> SubSubSampleTypeModels
		{
			get
			{
				return this.GetTable<SubSubSampleTypeModel>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ListReportsByContent")]
		public ISingleResult<ReportModel> ListReportsByContent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ST", DbType="TinyInt")] System.Nullable<byte> sT, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RIL", DbType="VarChar(200)")] string rIL)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sT, rIL);
			return ((ISingleResult<ReportModel>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportModels")]
	public partial class ReportModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _ReportTypeNumber;
		
		private string _ReportName;
		
		private System.Nullable<double> _StandardCost;
		
		private System.Nullable<double> _PrimaryVolumeCost;
		
		private System.Nullable<double> _SecondaryVolumeCost;
		
		private System.Nullable<int> _FileReferenceNumber;
		
		private System.Nullable<int> _SplitOverride;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnReportTypeNumberChanging(int value);
    partial void OnReportTypeNumberChanged();
    partial void OnReportNameChanging(string value);
    partial void OnReportNameChanged();
    partial void OnStandardCostChanging(System.Nullable<double> value);
    partial void OnStandardCostChanged();
    partial void OnPrimaryVolumeCostChanging(System.Nullable<double> value);
    partial void OnPrimaryVolumeCostChanged();
    partial void OnSecondaryVolumeCostChanging(System.Nullable<double> value);
    partial void OnSecondaryVolumeCostChanged();
    partial void OnFileReferenceNumberChanging(System.Nullable<int> value);
    partial void OnFileReferenceNumberChanged();
    partial void OnSplitOverrideChanging(System.Nullable<int> value);
    partial void OnSplitOverrideChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ReportModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportTypeNumber
		{
			get
			{
				return this._ReportTypeNumber;
			}
			set
			{
				if ((this._ReportTypeNumber != value))
				{
					this.OnReportTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeNumber = value;
					this.SendPropertyChanged("ReportTypeNumber");
					this.OnReportTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportName", DbType="NVarChar(MAX)")]
		public string ReportName
		{
			get
			{
				return this._ReportName;
			}
			set
			{
				if ((this._ReportName != value))
				{
					this.OnReportNameChanging(value);
					this.SendPropertyChanging();
					this._ReportName = value;
					this.SendPropertyChanged("ReportName");
					this.OnReportNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCost", DbType="Float")]
		public System.Nullable<double> StandardCost
		{
			get
			{
				return this._StandardCost;
			}
			set
			{
				if ((this._StandardCost != value))
				{
					this.OnStandardCostChanging(value);
					this.SendPropertyChanging();
					this._StandardCost = value;
					this.SendPropertyChanged("StandardCost");
					this.OnStandardCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryVolumeCost", DbType="Float")]
		public System.Nullable<double> PrimaryVolumeCost
		{
			get
			{
				return this._PrimaryVolumeCost;
			}
			set
			{
				if ((this._PrimaryVolumeCost != value))
				{
					this.OnPrimaryVolumeCostChanging(value);
					this.SendPropertyChanging();
					this._PrimaryVolumeCost = value;
					this.SendPropertyChanged("PrimaryVolumeCost");
					this.OnPrimaryVolumeCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryVolumeCost", DbType="Float")]
		public System.Nullable<double> SecondaryVolumeCost
		{
			get
			{
				return this._SecondaryVolumeCost;
			}
			set
			{
				if ((this._SecondaryVolumeCost != value))
				{
					this.OnSecondaryVolumeCostChanging(value);
					this.SendPropertyChanging();
					this._SecondaryVolumeCost = value;
					this.SendPropertyChanged("SecondaryVolumeCost");
					this.OnSecondaryVolumeCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileReferenceNumber", DbType="Int")]
		public System.Nullable<int> FileReferenceNumber
		{
			get
			{
				return this._FileReferenceNumber;
			}
			set
			{
				if ((this._FileReferenceNumber != value))
				{
					this.OnFileReferenceNumberChanging(value);
					this.SendPropertyChanging();
					this._FileReferenceNumber = value;
					this.SendPropertyChanged("FileReferenceNumber");
					this.OnFileReferenceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitOverride", DbType="Int")]
		public System.Nullable<int> SplitOverride
		{
			get
			{
				return this._SplitOverride;
			}
			set
			{
				if ((this._SplitOverride != value))
				{
					this.OnSplitOverrideChanging(value);
					this.SendPropertyChanging();
					this._SplitOverride = value;
					this.SendPropertyChanged("SplitOverride");
					this.OnSplitOverrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportReportItemModels")]
	public partial class ReportReportItemModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _ReportTypeNumber;
		
		private int _ReportItemNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnReportTypeNumberChanging(int value);
    partial void OnReportTypeNumberChanged();
    partial void OnReportItemNumberChanging(int value);
    partial void OnReportItemNumberChanged();
    #endregion
		
		public ReportReportItemModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportTypeNumber
		{
			get
			{
				return this._ReportTypeNumber;
			}
			set
			{
				if ((this._ReportTypeNumber != value))
				{
					this.OnReportTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeNumber = value;
					this.SendPropertyChanged("ReportTypeNumber");
					this.OnReportTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportItemNumber
		{
			get
			{
				return this._ReportItemNumber;
			}
			set
			{
				if ((this._ReportItemNumber != value))
				{
					this.OnReportItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ReportItemNumber = value;
					this.SendPropertyChanged("ReportItemNumber");
					this.OnReportItemNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerModels")]
	public partial class CustomerModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerNumber;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Company;
		
		private string _Address1;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Country;
		
		private System.Nullable<int> _BillToCompany;
		
		private System.Nullable<double> _Discount;
		
		private System.Nullable<int> _ActiveCustomer;
		
		private System.Nullable<int> _Mailresults;
		
		private System.Nullable<int> _MailedCopies;
		
		private System.Nullable<int> _FaxResults;
		
		private System.Nullable<int> _EmailResults;
		
		private System.Nullable<int> _PostResultsToWeb;
		
		private System.Nullable<int> _Newsletter;
		
		private System.Nullable<int> _WardGuide;
		
		private System.Nullable<int> _ChristmasCard;
		
		private System.Nullable<int> _NamaCust;
		
		private System.Nullable<int> _SendPDF;
		
		private System.Nullable<int> _PrintPDFHeaderFooter;
		
		private System.Nullable<int> _EPAInfo;
		
		private System.Nullable<int> _PrintInvNow;
		
		private System.Nullable<int> _PrintInvLater;
		
		private System.Nullable<int> _SendInvoice;
		
		private System.Nullable<int> _SendTextData;
		
		private System.Nullable<int> _SplitGrowers;
		
		private System.Nullable<int> _SplitFields;
		
		private string _ExtraInformation;
		
		private System.Nullable<int> _CustomerStatus;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private string _MachineID;
		
		private string _UserID;
		
		private string _SampleEntryInformation;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private System.Nullable<int> _ForceStandardSoilReport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerNumberChanging(int value);
    partial void OnCustomerNumberChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnBillToCompanyChanging(System.Nullable<int> value);
    partial void OnBillToCompanyChanged();
    partial void OnDiscountChanging(System.Nullable<double> value);
    partial void OnDiscountChanged();
    partial void OnActiveCustomerChanging(System.Nullable<int> value);
    partial void OnActiveCustomerChanged();
    partial void OnMailresultsChanging(System.Nullable<int> value);
    partial void OnMailresultsChanged();
    partial void OnMailedCopiesChanging(System.Nullable<int> value);
    partial void OnMailedCopiesChanged();
    partial void OnFaxResultsChanging(System.Nullable<int> value);
    partial void OnFaxResultsChanged();
    partial void OnEmailResultsChanging(System.Nullable<int> value);
    partial void OnEmailResultsChanged();
    partial void OnPostResultsToWebChanging(System.Nullable<int> value);
    partial void OnPostResultsToWebChanged();
    partial void OnNewsletterChanging(System.Nullable<int> value);
    partial void OnNewsletterChanged();
    partial void OnWardGuideChanging(System.Nullable<int> value);
    partial void OnWardGuideChanged();
    partial void OnChristmasCardChanging(System.Nullable<int> value);
    partial void OnChristmasCardChanged();
    partial void OnNamaCustChanging(System.Nullable<int> value);
    partial void OnNamaCustChanged();
    partial void OnSendPDFChanging(System.Nullable<int> value);
    partial void OnSendPDFChanged();
    partial void OnPrintPDFHeaderFooterChanging(System.Nullable<int> value);
    partial void OnPrintPDFHeaderFooterChanged();
    partial void OnEPAInfoChanging(System.Nullable<int> value);
    partial void OnEPAInfoChanged();
    partial void OnPrintInvNowChanging(System.Nullable<int> value);
    partial void OnPrintInvNowChanged();
    partial void OnPrintInvLaterChanging(System.Nullable<int> value);
    partial void OnPrintInvLaterChanged();
    partial void OnSendInvoiceChanging(System.Nullable<int> value);
    partial void OnSendInvoiceChanged();
    partial void OnSendTextDataChanging(System.Nullable<int> value);
    partial void OnSendTextDataChanged();
    partial void OnSplitGrowersChanging(System.Nullable<int> value);
    partial void OnSplitGrowersChanged();
    partial void OnSplitFieldsChanging(System.Nullable<int> value);
    partial void OnSplitFieldsChanged();
    partial void OnExtraInformationChanging(string value);
    partial void OnExtraInformationChanged();
    partial void OnCustomerStatusChanging(System.Nullable<int> value);
    partial void OnCustomerStatusChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnMachineIDChanging(string value);
    partial void OnMachineIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnSampleEntryInformationChanging(string value);
    partial void OnSampleEntryInformationChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnForceStandardSoilReportChanging(System.Nullable<int> value);
    partial void OnForceStandardSoilReportChanged();
    #endregion
		
		public CustomerModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(MAX)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(MAX)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(MAX)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="NVarChar(MAX)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(MAX)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToCompany", DbType="Int")]
		public System.Nullable<int> BillToCompany
		{
			get
			{
				return this._BillToCompany;
			}
			set
			{
				if ((this._BillToCompany != value))
				{
					this.OnBillToCompanyChanging(value);
					this.SendPropertyChanging();
					this._BillToCompany = value;
					this.SendPropertyChanged("BillToCompany");
					this.OnBillToCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float")]
		public System.Nullable<double> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCustomer", DbType="Int")]
		public System.Nullable<int> ActiveCustomer
		{
			get
			{
				return this._ActiveCustomer;
			}
			set
			{
				if ((this._ActiveCustomer != value))
				{
					this.OnActiveCustomerChanging(value);
					this.SendPropertyChanging();
					this._ActiveCustomer = value;
					this.SendPropertyChanged("ActiveCustomer");
					this.OnActiveCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mailresults", DbType="Int")]
		public System.Nullable<int> Mailresults
		{
			get
			{
				return this._Mailresults;
			}
			set
			{
				if ((this._Mailresults != value))
				{
					this.OnMailresultsChanging(value);
					this.SendPropertyChanging();
					this._Mailresults = value;
					this.SendPropertyChanged("Mailresults");
					this.OnMailresultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailedCopies", DbType="Int")]
		public System.Nullable<int> MailedCopies
		{
			get
			{
				return this._MailedCopies;
			}
			set
			{
				if ((this._MailedCopies != value))
				{
					this.OnMailedCopiesChanging(value);
					this.SendPropertyChanging();
					this._MailedCopies = value;
					this.SendPropertyChanged("MailedCopies");
					this.OnMailedCopiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxResults", DbType="Int")]
		public System.Nullable<int> FaxResults
		{
			get
			{
				return this._FaxResults;
			}
			set
			{
				if ((this._FaxResults != value))
				{
					this.OnFaxResultsChanging(value);
					this.SendPropertyChanging();
					this._FaxResults = value;
					this.SendPropertyChanged("FaxResults");
					this.OnFaxResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailResults", DbType="Int")]
		public System.Nullable<int> EmailResults
		{
			get
			{
				return this._EmailResults;
			}
			set
			{
				if ((this._EmailResults != value))
				{
					this.OnEmailResultsChanging(value);
					this.SendPropertyChanging();
					this._EmailResults = value;
					this.SendPropertyChanged("EmailResults");
					this.OnEmailResultsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostResultsToWeb", DbType="Int")]
		public System.Nullable<int> PostResultsToWeb
		{
			get
			{
				return this._PostResultsToWeb;
			}
			set
			{
				if ((this._PostResultsToWeb != value))
				{
					this.OnPostResultsToWebChanging(value);
					this.SendPropertyChanging();
					this._PostResultsToWeb = value;
					this.SendPropertyChanged("PostResultsToWeb");
					this.OnPostResultsToWebChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Newsletter", DbType="Int")]
		public System.Nullable<int> Newsletter
		{
			get
			{
				return this._Newsletter;
			}
			set
			{
				if ((this._Newsletter != value))
				{
					this.OnNewsletterChanging(value);
					this.SendPropertyChanging();
					this._Newsletter = value;
					this.SendPropertyChanged("Newsletter");
					this.OnNewsletterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardGuide", DbType="Int")]
		public System.Nullable<int> WardGuide
		{
			get
			{
				return this._WardGuide;
			}
			set
			{
				if ((this._WardGuide != value))
				{
					this.OnWardGuideChanging(value);
					this.SendPropertyChanging();
					this._WardGuide = value;
					this.SendPropertyChanged("WardGuide");
					this.OnWardGuideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChristmasCard", DbType="Int")]
		public System.Nullable<int> ChristmasCard
		{
			get
			{
				return this._ChristmasCard;
			}
			set
			{
				if ((this._ChristmasCard != value))
				{
					this.OnChristmasCardChanging(value);
					this.SendPropertyChanging();
					this._ChristmasCard = value;
					this.SendPropertyChanged("ChristmasCard");
					this.OnChristmasCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamaCust", DbType="Int")]
		public System.Nullable<int> NamaCust
		{
			get
			{
				return this._NamaCust;
			}
			set
			{
				if ((this._NamaCust != value))
				{
					this.OnNamaCustChanging(value);
					this.SendPropertyChanging();
					this._NamaCust = value;
					this.SendPropertyChanged("NamaCust");
					this.OnNamaCustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendPDF", DbType="Int")]
		public System.Nullable<int> SendPDF
		{
			get
			{
				return this._SendPDF;
			}
			set
			{
				if ((this._SendPDF != value))
				{
					this.OnSendPDFChanging(value);
					this.SendPropertyChanging();
					this._SendPDF = value;
					this.SendPropertyChanged("SendPDF");
					this.OnSendPDFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintPDFHeaderFooter", DbType="Int")]
		public System.Nullable<int> PrintPDFHeaderFooter
		{
			get
			{
				return this._PrintPDFHeaderFooter;
			}
			set
			{
				if ((this._PrintPDFHeaderFooter != value))
				{
					this.OnPrintPDFHeaderFooterChanging(value);
					this.SendPropertyChanging();
					this._PrintPDFHeaderFooter = value;
					this.SendPropertyChanged("PrintPDFHeaderFooter");
					this.OnPrintPDFHeaderFooterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPAInfo", DbType="Int")]
		public System.Nullable<int> EPAInfo
		{
			get
			{
				return this._EPAInfo;
			}
			set
			{
				if ((this._EPAInfo != value))
				{
					this.OnEPAInfoChanging(value);
					this.SendPropertyChanging();
					this._EPAInfo = value;
					this.SendPropertyChanged("EPAInfo");
					this.OnEPAInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintInvNow", DbType="Int")]
		public System.Nullable<int> PrintInvNow
		{
			get
			{
				return this._PrintInvNow;
			}
			set
			{
				if ((this._PrintInvNow != value))
				{
					this.OnPrintInvNowChanging(value);
					this.SendPropertyChanging();
					this._PrintInvNow = value;
					this.SendPropertyChanged("PrintInvNow");
					this.OnPrintInvNowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintInvLater", DbType="Int")]
		public System.Nullable<int> PrintInvLater
		{
			get
			{
				return this._PrintInvLater;
			}
			set
			{
				if ((this._PrintInvLater != value))
				{
					this.OnPrintInvLaterChanging(value);
					this.SendPropertyChanging();
					this._PrintInvLater = value;
					this.SendPropertyChanged("PrintInvLater");
					this.OnPrintInvLaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendInvoice", DbType="Int")]
		public System.Nullable<int> SendInvoice
		{
			get
			{
				return this._SendInvoice;
			}
			set
			{
				if ((this._SendInvoice != value))
				{
					this.OnSendInvoiceChanging(value);
					this.SendPropertyChanging();
					this._SendInvoice = value;
					this.SendPropertyChanged("SendInvoice");
					this.OnSendInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendTextData", DbType="Int")]
		public System.Nullable<int> SendTextData
		{
			get
			{
				return this._SendTextData;
			}
			set
			{
				if ((this._SendTextData != value))
				{
					this.OnSendTextDataChanging(value);
					this.SendPropertyChanging();
					this._SendTextData = value;
					this.SendPropertyChanged("SendTextData");
					this.OnSendTextDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitGrowers", DbType="Int")]
		public System.Nullable<int> SplitGrowers
		{
			get
			{
				return this._SplitGrowers;
			}
			set
			{
				if ((this._SplitGrowers != value))
				{
					this.OnSplitGrowersChanging(value);
					this.SendPropertyChanging();
					this._SplitGrowers = value;
					this.SendPropertyChanged("SplitGrowers");
					this.OnSplitGrowersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SplitFields", DbType="Int")]
		public System.Nullable<int> SplitFields
		{
			get
			{
				return this._SplitFields;
			}
			set
			{
				if ((this._SplitFields != value))
				{
					this.OnSplitFieldsChanging(value);
					this.SendPropertyChanging();
					this._SplitFields = value;
					this.SendPropertyChanged("SplitFields");
					this.OnSplitFieldsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraInformation", DbType="NVarChar(MAX)")]
		public string ExtraInformation
		{
			get
			{
				return this._ExtraInformation;
			}
			set
			{
				if ((this._ExtraInformation != value))
				{
					this.OnExtraInformationChanging(value);
					this.SendPropertyChanging();
					this._ExtraInformation = value;
					this.SendPropertyChanged("ExtraInformation");
					this.OnExtraInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatus", DbType="Int")]
		public System.Nullable<int> CustomerStatus
		{
			get
			{
				return this._CustomerStatus;
			}
			set
			{
				if ((this._CustomerStatus != value))
				{
					this.OnCustomerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerStatus = value;
					this.SendPropertyChanged("CustomerStatus");
					this.OnCustomerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineID", DbType="NVarChar(MAX)")]
		public string MachineID
		{
			get
			{
				return this._MachineID;
			}
			set
			{
				if ((this._MachineID != value))
				{
					this.OnMachineIDChanging(value);
					this.SendPropertyChanging();
					this._MachineID = value;
					this.SendPropertyChanged("MachineID");
					this.OnMachineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(MAX)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleEntryInformation", DbType="NVarChar(MAX)")]
		public string SampleEntryInformation
		{
			get
			{
				return this._SampleEntryInformation;
			}
			set
			{
				if ((this._SampleEntryInformation != value))
				{
					this.OnSampleEntryInformationChanging(value);
					this.SendPropertyChanging();
					this._SampleEntryInformation = value;
					this.SendPropertyChanged("SampleEntryInformation");
					this.OnSampleEntryInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime2")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForceStandardSoilReport", DbType="Int")]
		public System.Nullable<int> ForceStandardSoilReport
		{
			get
			{
				return this._ForceStandardSoilReport;
			}
			set
			{
				if ((this._ForceStandardSoilReport != value))
				{
					this.OnForceStandardSoilReportChanging(value);
					this.SendPropertyChanging();
					this._ForceStandardSoilReport = value;
					this.SendPropertyChanged("ForceStandardSoilReport");
					this.OnForceStandardSoilReportChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceModels")]
	public partial class InvoiceModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Row;
		
		private int _InvoiceNumber;
		
		private int _CustomerNumber;
		
		private int _SampleTypeNumber;
		
		private int _BatchNumber;
		
		private System.DateTime _DateReported;
		
		private System.Nullable<double> _PostageCost;
		
		private string _Comments;
		
		private System.Nullable<double> _CustomerDiscount;
		
		private System.Nullable<byte> _Locked;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowChanging(int value);
    partial void OnRowChanged();
    partial void OnInvoiceNumberChanging(int value);
    partial void OnInvoiceNumberChanged();
    partial void OnCustomerNumberChanging(int value);
    partial void OnCustomerNumberChanged();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnBatchNumberChanging(int value);
    partial void OnBatchNumberChanged();
    partial void OnDateReportedChanging(System.DateTime value);
    partial void OnDateReportedChanged();
    partial void OnPostageCostChanging(System.Nullable<double> value);
    partial void OnPostageCostChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnCustomerDiscountChanging(System.Nullable<double> value);
    partial void OnCustomerDiscountChanged();
    partial void OnLockedChanging(System.Nullable<byte> value);
    partial void OnLockedChanged();
    #endregion
		
		public InvoiceModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Row", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Row
		{
			get
			{
				return this._Row;
			}
			set
			{
				if ((this._Row != value))
				{
					this.OnRowChanging(value);
					this.SendPropertyChanging();
					this._Row = value;
					this.SendPropertyChanged("Row");
					this.OnRowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReported", DbType="DateTime NOT NULL")]
		public System.DateTime DateReported
		{
			get
			{
				return this._DateReported;
			}
			set
			{
				if ((this._DateReported != value))
				{
					this.OnDateReportedChanging(value);
					this.SendPropertyChanging();
					this._DateReported = value;
					this.SendPropertyChanged("DateReported");
					this.OnDateReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostageCost", DbType="Float")]
		public System.Nullable<double> PostageCost
		{
			get
			{
				return this._PostageCost;
			}
			set
			{
				if ((this._PostageCost != value))
				{
					this.OnPostageCostChanging(value);
					this.SendPropertyChanging();
					this._PostageCost = value;
					this.SendPropertyChanged("PostageCost");
					this.OnPostageCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerDiscount", DbType="Float")]
		public System.Nullable<double> CustomerDiscount
		{
			get
			{
				return this._CustomerDiscount;
			}
			set
			{
				if ((this._CustomerDiscount != value))
				{
					this.OnCustomerDiscountChanging(value);
					this.SendPropertyChanging();
					this._CustomerDiscount = value;
					this.SendPropertyChanged("CustomerDiscount");
					this.OnCustomerDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="TinyInt")]
		public System.Nullable<byte> Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleModels")]
	public partial class SampleModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _BatchNumber;
		
		private int _LabNumber;
		
		private int _CustomerNumber;
		
		private int _InvoiceNumber;
		
		private System.DateTime _DateReceived;
		
		private System.Nullable<int> _ReportTypeNumber;
		
		private System.Nullable<double> _ReportCost;
		
		private string _SampleID1;
		
		private string _SampleID2;
		
		private string _SampleID3;
		
		private string _SampleID4;
		
		private System.Nullable<int> _Reviewed;
		
		private System.Nullable<int> _Emailed;
		
		private System.Nullable<int> _Uploaded;
		
		private System.Nullable<int> _Faxed;
		
		private System.Nullable<int> _Hold;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _LastModified;
		
		private System.Nullable<int> _ReviewerID;
		
		private string _Grower;
		
		private string _SampleID5;
		
		private System.DateTime _DateReported;
		
		private int _CostTypeNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnBatchNumberChanging(int value);
    partial void OnBatchNumberChanged();
    partial void OnLabNumberChanging(int value);
    partial void OnLabNumberChanged();
    partial void OnCustomerNumberChanging(int value);
    partial void OnCustomerNumberChanged();
    partial void OnInvoiceNumberChanging(int value);
    partial void OnInvoiceNumberChanged();
    partial void OnDateReceivedChanging(System.DateTime value);
    partial void OnDateReceivedChanged();
    partial void OnReportTypeNumberChanging(System.Nullable<int> value);
    partial void OnReportTypeNumberChanged();
    partial void OnReportCostChanging(System.Nullable<double> value);
    partial void OnReportCostChanged();
    partial void OnSampleID1Changing(string value);
    partial void OnSampleID1Changed();
    partial void OnSampleID2Changing(string value);
    partial void OnSampleID2Changed();
    partial void OnSampleID3Changing(string value);
    partial void OnSampleID3Changed();
    partial void OnSampleID4Changing(string value);
    partial void OnSampleID4Changed();
    partial void OnReviewedChanging(System.Nullable<int> value);
    partial void OnReviewedChanged();
    partial void OnEmailedChanging(System.Nullable<int> value);
    partial void OnEmailedChanged();
    partial void OnUploadedChanging(System.Nullable<int> value);
    partial void OnUploadedChanged();
    partial void OnFaxedChanging(System.Nullable<int> value);
    partial void OnFaxedChanged();
    partial void OnHoldChanging(System.Nullable<int> value);
    partial void OnHoldChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnLastModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedChanged();
    partial void OnReviewerIDChanging(System.Nullable<int> value);
    partial void OnReviewerIDChanged();
    partial void OnGrowerChanging(string value);
    partial void OnGrowerChanged();
    partial void OnSampleID5Changing(string value);
    partial void OnSampleID5Changed();
    partial void OnDateReportedChanging(System.DateTime value);
    partial void OnDateReportedChanged();
    partial void OnCostTypeNumberChanging(int value);
    partial void OnCostTypeNumberChanged();
    #endregion
		
		public SampleModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LabNumber
		{
			get
			{
				return this._LabNumber;
			}
			set
			{
				if ((this._LabNumber != value))
				{
					this.OnLabNumberChanging(value);
					this.SendPropertyChanging();
					this._LabNumber = value;
					this.SendPropertyChanged("LabNumber");
					this.OnLabNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="Int NOT NULL")]
		public int CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="Int NOT NULL")]
		public int InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReceived", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateReceived
		{
			get
			{
				return this._DateReceived;
			}
			set
			{
				if ((this._DateReceived != value))
				{
					this.OnDateReceivedChanging(value);
					this.SendPropertyChanging();
					this._DateReceived = value;
					this.SendPropertyChanged("DateReceived");
					this.OnDateReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeNumber", DbType="Int")]
		public System.Nullable<int> ReportTypeNumber
		{
			get
			{
				return this._ReportTypeNumber;
			}
			set
			{
				if ((this._ReportTypeNumber != value))
				{
					this.OnReportTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeNumber = value;
					this.SendPropertyChanged("ReportTypeNumber");
					this.OnReportTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportCost", DbType="Float")]
		public System.Nullable<double> ReportCost
		{
			get
			{
				return this._ReportCost;
			}
			set
			{
				if ((this._ReportCost != value))
				{
					this.OnReportCostChanging(value);
					this.SendPropertyChanging();
					this._ReportCost = value;
					this.SendPropertyChanged("ReportCost");
					this.OnReportCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID1", DbType="NVarChar(MAX)")]
		public string SampleID1
		{
			get
			{
				return this._SampleID1;
			}
			set
			{
				if ((this._SampleID1 != value))
				{
					this.OnSampleID1Changing(value);
					this.SendPropertyChanging();
					this._SampleID1 = value;
					this.SendPropertyChanged("SampleID1");
					this.OnSampleID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID2", DbType="NVarChar(MAX)")]
		public string SampleID2
		{
			get
			{
				return this._SampleID2;
			}
			set
			{
				if ((this._SampleID2 != value))
				{
					this.OnSampleID2Changing(value);
					this.SendPropertyChanging();
					this._SampleID2 = value;
					this.SendPropertyChanged("SampleID2");
					this.OnSampleID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID3", DbType="NVarChar(MAX)")]
		public string SampleID3
		{
			get
			{
				return this._SampleID3;
			}
			set
			{
				if ((this._SampleID3 != value))
				{
					this.OnSampleID3Changing(value);
					this.SendPropertyChanging();
					this._SampleID3 = value;
					this.SendPropertyChanged("SampleID3");
					this.OnSampleID3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID4", DbType="NVarChar(MAX)")]
		public string SampleID4
		{
			get
			{
				return this._SampleID4;
			}
			set
			{
				if ((this._SampleID4 != value))
				{
					this.OnSampleID4Changing(value);
					this.SendPropertyChanging();
					this._SampleID4 = value;
					this.SendPropertyChanged("SampleID4");
					this.OnSampleID4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewed", DbType="Int")]
		public System.Nullable<int> Reviewed
		{
			get
			{
				return this._Reviewed;
			}
			set
			{
				if ((this._Reviewed != value))
				{
					this.OnReviewedChanging(value);
					this.SendPropertyChanging();
					this._Reviewed = value;
					this.SendPropertyChanged("Reviewed");
					this.OnReviewedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emailed", DbType="Int")]
		public System.Nullable<int> Emailed
		{
			get
			{
				return this._Emailed;
			}
			set
			{
				if ((this._Emailed != value))
				{
					this.OnEmailedChanging(value);
					this.SendPropertyChanging();
					this._Emailed = value;
					this.SendPropertyChanged("Emailed");
					this.OnEmailedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uploaded", DbType="Int")]
		public System.Nullable<int> Uploaded
		{
			get
			{
				return this._Uploaded;
			}
			set
			{
				if ((this._Uploaded != value))
				{
					this.OnUploadedChanging(value);
					this.SendPropertyChanging();
					this._Uploaded = value;
					this.SendPropertyChanged("Uploaded");
					this.OnUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Faxed", DbType="Int")]
		public System.Nullable<int> Faxed
		{
			get
			{
				return this._Faxed;
			}
			set
			{
				if ((this._Faxed != value))
				{
					this.OnFaxedChanging(value);
					this.SendPropertyChanging();
					this._Faxed = value;
					this.SendPropertyChanged("Faxed");
					this.OnFaxedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hold", DbType="Int")]
		public System.Nullable<int> Hold
		{
			get
			{
				return this._Hold;
			}
			set
			{
				if ((this._Hold != value))
				{
					this.OnHoldChanging(value);
					this.SendPropertyChanging();
					this._Hold = value;
					this.SendPropertyChanged("Hold");
					this.OnHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModified", DbType="DateTime2")]
		public System.Nullable<System.DateTime> LastModified
		{
			get
			{
				return this._LastModified;
			}
			set
			{
				if ((this._LastModified != value))
				{
					this.OnLastModifiedChanging(value);
					this.SendPropertyChanging();
					this._LastModified = value;
					this.SendPropertyChanged("LastModified");
					this.OnLastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewerID", DbType="Int")]
		public System.Nullable<int> ReviewerID
		{
			get
			{
				return this._ReviewerID;
			}
			set
			{
				if ((this._ReviewerID != value))
				{
					this.OnReviewerIDChanging(value);
					this.SendPropertyChanging();
					this._ReviewerID = value;
					this.SendPropertyChanged("ReviewerID");
					this.OnReviewerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grower", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Grower
		{
			get
			{
				return this._Grower;
			}
			set
			{
				if ((this._Grower != value))
				{
					this.OnGrowerChanging(value);
					this.SendPropertyChanging();
					this._Grower = value;
					this.SendPropertyChanged("Grower");
					this.OnGrowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleID5", DbType="NVarChar(MAX)")]
		public string SampleID5
		{
			get
			{
				return this._SampleID5;
			}
			set
			{
				if ((this._SampleID5 != value))
				{
					this.OnSampleID5Changing(value);
					this.SendPropertyChanging();
					this._SampleID5 = value;
					this.SendPropertyChanged("SampleID5");
					this.OnSampleID5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReported", DbType="DateTime NOT NULL")]
		public System.DateTime DateReported
		{
			get
			{
				return this._DateReported;
			}
			set
			{
				if ((this._DateReported != value))
				{
					this.OnDateReportedChanging(value);
					this.SendPropertyChanging();
					this._DateReported = value;
					this.SendPropertyChanged("DateReported");
					this.OnDateReportedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostTypeNumber", DbType="Int NOT NULL")]
		public int CostTypeNumber
		{
			get
			{
				return this._CostTypeNumber;
			}
			set
			{
				if ((this._CostTypeNumber != value))
				{
					this.OnCostTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._CostTypeNumber = value;
					this.SendPropertyChanged("CostTypeNumber");
					this.OnCostTypeNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportItemModels")]
	public partial class ReportItemModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _ReportItemNumber;
		
		private string _ReportItemName;
		
		private string _ReportItemDisplay;
		
		private double _ReportItemCost;
		
		private int _EquationNumber;
		
		private int _ReportItemDecimals;
		
		private double _MinimumValue;
		
		private int _ReportOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnReportItemNumberChanging(int value);
    partial void OnReportItemNumberChanged();
    partial void OnReportItemNameChanging(string value);
    partial void OnReportItemNameChanged();
    partial void OnReportItemDisplayChanging(string value);
    partial void OnReportItemDisplayChanged();
    partial void OnReportItemCostChanging(double value);
    partial void OnReportItemCostChanged();
    partial void OnEquationNumberChanging(int value);
    partial void OnEquationNumberChanged();
    partial void OnReportItemDecimalsChanging(int value);
    partial void OnReportItemDecimalsChanged();
    partial void OnMinimumValueChanging(double value);
    partial void OnMinimumValueChanged();
    partial void OnReportOrderChanging(int value);
    partial void OnReportOrderChanged();
    #endregion
		
		public ReportItemModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportItemNumber
		{
			get
			{
				return this._ReportItemNumber;
			}
			set
			{
				if ((this._ReportItemNumber != value))
				{
					this.OnReportItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ReportItemNumber = value;
					this.SendPropertyChanged("ReportItemNumber");
					this.OnReportItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemName", DbType="NVarChar(MAX)")]
		public string ReportItemName
		{
			get
			{
				return this._ReportItemName;
			}
			set
			{
				if ((this._ReportItemName != value))
				{
					this.OnReportItemNameChanging(value);
					this.SendPropertyChanging();
					this._ReportItemName = value;
					this.SendPropertyChanged("ReportItemName");
					this.OnReportItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemDisplay", DbType="NVarChar(MAX)")]
		public string ReportItemDisplay
		{
			get
			{
				return this._ReportItemDisplay;
			}
			set
			{
				if ((this._ReportItemDisplay != value))
				{
					this.OnReportItemDisplayChanging(value);
					this.SendPropertyChanging();
					this._ReportItemDisplay = value;
					this.SendPropertyChanged("ReportItemDisplay");
					this.OnReportItemDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemCost", DbType="Float NOT NULL")]
		public double ReportItemCost
		{
			get
			{
				return this._ReportItemCost;
			}
			set
			{
				if ((this._ReportItemCost != value))
				{
					this.OnReportItemCostChanging(value);
					this.SendPropertyChanging();
					this._ReportItemCost = value;
					this.SendPropertyChanged("ReportItemCost");
					this.OnReportItemCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquationNumber", DbType="Int NOT NULL")]
		public int EquationNumber
		{
			get
			{
				return this._EquationNumber;
			}
			set
			{
				if ((this._EquationNumber != value))
				{
					this.OnEquationNumberChanging(value);
					this.SendPropertyChanging();
					this._EquationNumber = value;
					this.SendPropertyChanged("EquationNumber");
					this.OnEquationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemDecimals", DbType="Int NOT NULL")]
		public int ReportItemDecimals
		{
			get
			{
				return this._ReportItemDecimals;
			}
			set
			{
				if ((this._ReportItemDecimals != value))
				{
					this.OnReportItemDecimalsChanging(value);
					this.SendPropertyChanging();
					this._ReportItemDecimals = value;
					this.SendPropertyChanged("ReportItemDecimals");
					this.OnReportItemDecimalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumValue", DbType="Float NOT NULL")]
		public double MinimumValue
		{
			get
			{
				return this._MinimumValue;
			}
			set
			{
				if ((this._MinimumValue != value))
				{
					this.OnMinimumValueChanging(value);
					this.SendPropertyChanging();
					this._MinimumValue = value;
					this.SendPropertyChanged("MinimumValue");
					this.OnMinimumValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportOrder", DbType="Int NOT NULL")]
		public int ReportOrder
		{
			get
			{
				return this._ReportOrder;
			}
			set
			{
				if ((this._ReportOrder != value))
				{
					this.OnReportOrderChanging(value);
					this.SendPropertyChanging();
					this._ReportOrder = value;
					this.SendPropertyChanged("ReportOrder");
					this.OnReportOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportItemTestModels")]
	public partial class ReportItemTestModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _ReportItemNumber;
		
		private int _TestItemNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnReportItemNumberChanging(int value);
    partial void OnReportItemNumberChanged();
    partial void OnTestItemNumberChanging(int value);
    partial void OnTestItemNumberChanged();
    #endregion
		
		public ReportItemTestModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportItemNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReportItemNumber
		{
			get
			{
				return this._ReportItemNumber;
			}
			set
			{
				if ((this._ReportItemNumber != value))
				{
					this.OnReportItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ReportItemNumber = value;
					this.SendPropertyChanged("ReportItemNumber");
					this.OnReportItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestItemNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TestItemNumber
		{
			get
			{
				return this._TestItemNumber;
			}
			set
			{
				if ((this._TestItemNumber != value))
				{
					this.OnTestItemNumberChanging(value);
					this.SendPropertyChanging();
					this._TestItemNumber = value;
					this.SendPropertyChanged("TestItemNumber");
					this.OnTestItemNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PastCropModels")]
	public partial class PastCropModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PastCropNumber;
		
		private string _PastCropName;
		
		private System.Nullable<double> _NitrogenCredit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPastCropNumberChanging(int value);
    partial void OnPastCropNumberChanged();
    partial void OnPastCropNameChanging(string value);
    partial void OnPastCropNameChanged();
    partial void OnNitrogenCreditChanging(System.Nullable<double> value);
    partial void OnNitrogenCreditChanged();
    #endregion
		
		public PastCropModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastCropNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PastCropNumber
		{
			get
			{
				return this._PastCropNumber;
			}
			set
			{
				if ((this._PastCropNumber != value))
				{
					this.OnPastCropNumberChanging(value);
					this.SendPropertyChanging();
					this._PastCropNumber = value;
					this.SendPropertyChanged("PastCropNumber");
					this.OnPastCropNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastCropName", DbType="NVarChar(MAX)")]
		public string PastCropName
		{
			get
			{
				return this._PastCropName;
			}
			set
			{
				if ((this._PastCropName != value))
				{
					this.OnPastCropNameChanging(value);
					this.SendPropertyChanging();
					this._PastCropName = value;
					this.SendPropertyChanged("PastCropName");
					this.OnPastCropNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NitrogenCredit", DbType="Float")]
		public System.Nullable<double> NitrogenCredit
		{
			get
			{
				return this._NitrogenCredit;
			}
			set
			{
				if ((this._NitrogenCredit != value))
				{
					this.OnNitrogenCreditChanging(value);
					this.SendPropertyChanging();
					this._NitrogenCredit = value;
					this.SendPropertyChanged("NitrogenCredit");
					this.OnNitrogenCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleColumns")]
	public partial class SampleColumn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _ColumnOrder;
		
		private string _Label;
		
		private string _Model;
		
		private string _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnColumnOrderChanging(int value);
    partial void OnColumnOrderChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    #endregion
		
		public SampleColumn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnOrder", DbType="Int NOT NULL")]
		public int ColumnOrder
		{
			get
			{
				return this._ColumnOrder;
			}
			set
			{
				if ((this._ColumnOrder != value))
				{
					this.OnColumnOrderChanging(value);
					this.SendPropertyChanging();
					this._ColumnOrder = value;
					this.SendPropertyChanged("ColumnOrder");
					this.OnColumnOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(MAX)")]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleTypeModels")]
	public partial class SampleTypeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private string _SampleTypeName;
		
		private EntitySet<SubSampleTypeModel> _SubSampleTypeModels;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnSampleTypeNameChanging(string value);
    partial void OnSampleTypeNameChanged();
    #endregion
		
		public SampleTypeModel()
		{
			this._SubSampleTypeModels = new EntitySet<SubSampleTypeModel>(new Action<SubSampleTypeModel>(this.attach_SubSampleTypeModels), new Action<SubSampleTypeModel>(this.detach_SubSampleTypeModels));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeName", DbType="NVarChar(MAX)")]
		public string SampleTypeName
		{
			get
			{
				return this._SampleTypeName;
			}
			set
			{
				if ((this._SampleTypeName != value))
				{
					this.OnSampleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeName = value;
					this.SendPropertyChanged("SampleTypeName");
					this.OnSampleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SampleTypeModel_SubSampleTypeModel", Storage="_SubSampleTypeModels", ThisKey="SampleTypeNumber", OtherKey="SampleTypeNumber")]
		public EntitySet<SubSampleTypeModel> SubSampleTypeModels
		{
			get
			{
				return this._SubSampleTypeModels;
			}
			set
			{
				this._SubSampleTypeModels.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubSampleTypeModels(SubSampleTypeModel entity)
		{
			this.SendPropertyChanging();
			entity.SampleTypeModel = this;
		}
		
		private void detach_SubSampleTypeModels(SubSampleTypeModel entity)
		{
			this.SendPropertyChanging();
			entity.SampleTypeModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SoilRecCropModels")]
	public partial class SoilRecCropModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CropTypeNumber;
		
		private string _CropTypeName;
		
		private string _Unit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCropTypeNumberChanging(int value);
    partial void OnCropTypeNumberChanged();
    partial void OnCropTypeNameChanging(string value);
    partial void OnCropTypeNameChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    #endregion
		
		public SoilRecCropModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CropTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CropTypeNumber
		{
			get
			{
				return this._CropTypeNumber;
			}
			set
			{
				if ((this._CropTypeNumber != value))
				{
					this.OnCropTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._CropTypeNumber = value;
					this.SendPropertyChanged("CropTypeNumber");
					this.OnCropTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CropTypeName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CropTypeName
		{
			get
			{
				return this._CropTypeName;
			}
			set
			{
				if ((this._CropTypeName != value))
				{
					this.OnCropTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CropTypeName = value;
					this.SendPropertyChanged("CropTypeName");
					this.OnCropTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(MAX)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SoilRecTypeModels")]
	public partial class SoilRecTypeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecTypeNumber;
		
		private string _RecTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecTypeNumberChanging(int value);
    partial void OnRecTypeNumberChanged();
    partial void OnRecTypeNameChanging(string value);
    partial void OnRecTypeNameChanged();
    #endregion
		
		public SoilRecTypeModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RecTypeNumber
		{
			get
			{
				return this._RecTypeNumber;
			}
			set
			{
				if ((this._RecTypeNumber != value))
				{
					this.OnRecTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._RecTypeNumber = value;
					this.SendPropertyChanged("RecTypeNumber");
					this.OnRecTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTypeName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RecTypeName
		{
			get
			{
				return this._RecTypeName;
			}
			set
			{
				if ((this._RecTypeName != value))
				{
					this.OnRecTypeNameChanging(value);
					this.SendPropertyChanging();
					this._RecTypeName = value;
					this.SendPropertyChanged("RecTypeName");
					this.OnRecTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SoilSampleModels")]
	public partial class SoilSampleModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchNumber;
		
		private int _LabNumber;
		
		private int _BeginningDepth;
		
		private int _EndingDepth;
		
		private int _PastCropNumber;
		
		private int _LinkedSampleBatch;
		
		private int _LinkedSampleLab;
		
		private int _TopSoil;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchNumberChanging(int value);
    partial void OnBatchNumberChanged();
    partial void OnLabNumberChanging(int value);
    partial void OnLabNumberChanged();
    partial void OnBeginningDepthChanging(int value);
    partial void OnBeginningDepthChanged();
    partial void OnEndingDepthChanging(int value);
    partial void OnEndingDepthChanged();
    partial void OnPastCropNumberChanging(int value);
    partial void OnPastCropNumberChanged();
    partial void OnLinkedSampleBatchChanging(int value);
    partial void OnLinkedSampleBatchChanged();
    partial void OnLinkedSampleLabChanging(int value);
    partial void OnLinkedSampleLabChanged();
    partial void OnTopSoilChanging(int value);
    partial void OnTopSoilChanged();
    #endregion
		
		public SoilSampleModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LabNumber
		{
			get
			{
				return this._LabNumber;
			}
			set
			{
				if ((this._LabNumber != value))
				{
					this.OnLabNumberChanging(value);
					this.SendPropertyChanging();
					this._LabNumber = value;
					this.SendPropertyChanged("LabNumber");
					this.OnLabNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginningDepth", DbType="Int NOT NULL")]
		public int BeginningDepth
		{
			get
			{
				return this._BeginningDepth;
			}
			set
			{
				if ((this._BeginningDepth != value))
				{
					this.OnBeginningDepthChanging(value);
					this.SendPropertyChanging();
					this._BeginningDepth = value;
					this.SendPropertyChanged("BeginningDepth");
					this.OnBeginningDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingDepth", DbType="Int NOT NULL")]
		public int EndingDepth
		{
			get
			{
				return this._EndingDepth;
			}
			set
			{
				if ((this._EndingDepth != value))
				{
					this.OnEndingDepthChanging(value);
					this.SendPropertyChanging();
					this._EndingDepth = value;
					this.SendPropertyChanged("EndingDepth");
					this.OnEndingDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PastCropNumber", DbType="Int NOT NULL")]
		public int PastCropNumber
		{
			get
			{
				return this._PastCropNumber;
			}
			set
			{
				if ((this._PastCropNumber != value))
				{
					this.OnPastCropNumberChanging(value);
					this.SendPropertyChanging();
					this._PastCropNumber = value;
					this.SendPropertyChanged("PastCropNumber");
					this.OnPastCropNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedSampleBatch", DbType="Int NOT NULL")]
		public int LinkedSampleBatch
		{
			get
			{
				return this._LinkedSampleBatch;
			}
			set
			{
				if ((this._LinkedSampleBatch != value))
				{
					this.OnLinkedSampleBatchChanging(value);
					this.SendPropertyChanging();
					this._LinkedSampleBatch = value;
					this.SendPropertyChanged("LinkedSampleBatch");
					this.OnLinkedSampleBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedSampleLab", DbType="Int NOT NULL")]
		public int LinkedSampleLab
		{
			get
			{
				return this._LinkedSampleLab;
			}
			set
			{
				if ((this._LinkedSampleLab != value))
				{
					this.OnLinkedSampleLabChanging(value);
					this.SendPropertyChanging();
					this._LinkedSampleLab = value;
					this.SendPropertyChanged("LinkedSampleLab");
					this.OnLinkedSampleLabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopSoil", DbType="Int NOT NULL")]
		public int TopSoil
		{
			get
			{
				return this._TopSoil;
			}
			set
			{
				if ((this._TopSoil != value))
				{
					this.OnTopSoilChanging(value);
					this.SendPropertyChanging();
					this._TopSoil = value;
					this.SendPropertyChanged("TopSoil");
					this.OnTopSoilChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SoilSampleRecModels")]
	public partial class SoilSampleRecModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BatchNumber;
		
		private int _LabNumber;
		
		private System.Nullable<int> _Priority;
		
		private int _RecTypeNumber;
		
		private int _CropTypeNumber;
		
		private double _YieldGoal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchNumberChanging(int value);
    partial void OnBatchNumberChanged();
    partial void OnLabNumberChanging(int value);
    partial void OnLabNumberChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnRecTypeNumberChanging(int value);
    partial void OnRecTypeNumberChanged();
    partial void OnCropTypeNumberChanging(int value);
    partial void OnCropTypeNumberChanged();
    partial void OnYieldGoalChanging(double value);
    partial void OnYieldGoalChanged();
    #endregion
		
		public SoilSampleRecModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BatchNumber
		{
			get
			{
				return this._BatchNumber;
			}
			set
			{
				if ((this._BatchNumber != value))
				{
					this.OnBatchNumberChanging(value);
					this.SendPropertyChanging();
					this._BatchNumber = value;
					this.SendPropertyChanged("BatchNumber");
					this.OnBatchNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LabNumber
		{
			get
			{
				return this._LabNumber;
			}
			set
			{
				if ((this._LabNumber != value))
				{
					this.OnLabNumberChanging(value);
					this.SendPropertyChanging();
					this._LabNumber = value;
					this.SendPropertyChanged("LabNumber");
					this.OnLabNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RecTypeNumber
		{
			get
			{
				return this._RecTypeNumber;
			}
			set
			{
				if ((this._RecTypeNumber != value))
				{
					this.OnRecTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._RecTypeNumber = value;
					this.SendPropertyChanged("RecTypeNumber");
					this.OnRecTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CropTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CropTypeNumber
		{
			get
			{
				return this._CropTypeNumber;
			}
			set
			{
				if ((this._CropTypeNumber != value))
				{
					this.OnCropTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._CropTypeNumber = value;
					this.SendPropertyChanged("CropTypeNumber");
					this.OnCropTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YieldGoal", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double YieldGoal
		{
			get
			{
				return this._YieldGoal;
			}
			set
			{
				if ((this._YieldGoal != value))
				{
					this.OnYieldGoalChanging(value);
					this.SendPropertyChanging();
					this._YieldGoal = value;
					this.SendPropertyChanged("YieldGoal");
					this.OnYieldGoalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubSampleTypeModels")]
	public partial class SubSampleTypeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _SubSampleTypeNumber;
		
		private string _SubSampleTypeName;
		
		private EntitySet<SubSubSampleTypeModel> _SubSubSampleTypeModels;
		
		private EntityRef<SampleTypeModel> _SampleTypeModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnSubSampleTypeNumberChanging(int value);
    partial void OnSubSampleTypeNumberChanged();
    partial void OnSubSampleTypeNameChanging(string value);
    partial void OnSubSampleTypeNameChanged();
    #endregion
		
		public SubSampleTypeModel()
		{
			this._SubSubSampleTypeModels = new EntitySet<SubSubSampleTypeModel>(new Action<SubSubSampleTypeModel>(this.attach_SubSubSampleTypeModels), new Action<SubSubSampleTypeModel>(this.detach_SubSubSampleTypeModels));
			this._SampleTypeModel = default(EntityRef<SampleTypeModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					if (this._SampleTypeModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubSampleTypeNumber
		{
			get
			{
				return this._SubSampleTypeNumber;
			}
			set
			{
				if ((this._SubSampleTypeNumber != value))
				{
					this.OnSubSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SubSampleTypeNumber = value;
					this.SendPropertyChanged("SubSampleTypeNumber");
					this.OnSubSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSampleTypeName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SubSampleTypeName
		{
			get
			{
				return this._SubSampleTypeName;
			}
			set
			{
				if ((this._SubSampleTypeName != value))
				{
					this.OnSubSampleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SubSampleTypeName = value;
					this.SendPropertyChanged("SubSampleTypeName");
					this.OnSubSampleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubSampleTypeModel_SubSubSampleTypeModel", Storage="_SubSubSampleTypeModels", ThisKey="SampleTypeNumber,SubSampleTypeNumber", OtherKey="SampleTypeNumber,SubSampleTypeNumber")]
		public EntitySet<SubSubSampleTypeModel> SubSubSampleTypeModels
		{
			get
			{
				return this._SubSubSampleTypeModels;
			}
			set
			{
				this._SubSubSampleTypeModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SampleTypeModel_SubSampleTypeModel", Storage="_SampleTypeModel", ThisKey="SampleTypeNumber", OtherKey="SampleTypeNumber", IsForeignKey=true)]
		public SampleTypeModel SampleTypeModel
		{
			get
			{
				return this._SampleTypeModel.Entity;
			}
			set
			{
				SampleTypeModel previousValue = this._SampleTypeModel.Entity;
				if (((previousValue != value) 
							|| (this._SampleTypeModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SampleTypeModel.Entity = null;
						previousValue.SubSampleTypeModels.Remove(this);
					}
					this._SampleTypeModel.Entity = value;
					if ((value != null))
					{
						value.SubSampleTypeModels.Add(this);
						this._SampleTypeNumber = value.SampleTypeNumber;
					}
					else
					{
						this._SampleTypeNumber = default(int);
					}
					this.SendPropertyChanged("SampleTypeModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubSubSampleTypeModels(SubSubSampleTypeModel entity)
		{
			this.SendPropertyChanging();
			entity.SubSampleTypeModel = this;
		}
		
		private void detach_SubSubSampleTypeModels(SubSubSampleTypeModel entity)
		{
			this.SendPropertyChanging();
			entity.SubSampleTypeModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubSubSampleTypeModels")]
	public partial class SubSubSampleTypeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleTypeNumber;
		
		private int _SubSampleTypeNumber;
		
		private int _SubSubSampleTypeNumber;
		
		private string _SubSubSampleTypeName;
		
		private EntityRef<SubSampleTypeModel> _SubSampleTypeModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleTypeNumberChanging(int value);
    partial void OnSampleTypeNumberChanged();
    partial void OnSubSampleTypeNumberChanging(int value);
    partial void OnSubSampleTypeNumberChanged();
    partial void OnSubSubSampleTypeNumberChanging(int value);
    partial void OnSubSubSampleTypeNumberChanged();
    partial void OnSubSubSampleTypeNameChanging(string value);
    partial void OnSubSubSampleTypeNameChanged();
    #endregion
		
		public SubSubSampleTypeModel()
		{
			this._SubSampleTypeModel = default(EntityRef<SubSampleTypeModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SampleTypeNumber
		{
			get
			{
				return this._SampleTypeNumber;
			}
			set
			{
				if ((this._SampleTypeNumber != value))
				{
					if (this._SubSampleTypeModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeNumber = value;
					this.SendPropertyChanged("SampleTypeNumber");
					this.OnSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubSampleTypeNumber
		{
			get
			{
				return this._SubSampleTypeNumber;
			}
			set
			{
				if ((this._SubSampleTypeNumber != value))
				{
					if (this._SubSampleTypeModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SubSampleTypeNumber = value;
					this.SendPropertyChanged("SubSampleTypeNumber");
					this.OnSubSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSubSampleTypeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubSubSampleTypeNumber
		{
			get
			{
				return this._SubSubSampleTypeNumber;
			}
			set
			{
				if ((this._SubSubSampleTypeNumber != value))
				{
					this.OnSubSubSampleTypeNumberChanging(value);
					this.SendPropertyChanging();
					this._SubSubSampleTypeNumber = value;
					this.SendPropertyChanged("SubSubSampleTypeNumber");
					this.OnSubSubSampleTypeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubSubSampleTypeName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SubSubSampleTypeName
		{
			get
			{
				return this._SubSubSampleTypeName;
			}
			set
			{
				if ((this._SubSubSampleTypeName != value))
				{
					this.OnSubSubSampleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SubSubSampleTypeName = value;
					this.SendPropertyChanged("SubSubSampleTypeName");
					this.OnSubSubSampleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SubSampleTypeModel_SubSubSampleTypeModel", Storage="_SubSampleTypeModel", ThisKey="SampleTypeNumber,SubSampleTypeNumber", OtherKey="SampleTypeNumber,SubSampleTypeNumber", IsForeignKey=true)]
		public SubSampleTypeModel SubSampleTypeModel
		{
			get
			{
				return this._SubSampleTypeModel.Entity;
			}
			set
			{
				SubSampleTypeModel previousValue = this._SubSampleTypeModel.Entity;
				if (((previousValue != value) 
							|| (this._SubSampleTypeModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SubSampleTypeModel.Entity = null;
						previousValue.SubSubSampleTypeModels.Remove(this);
					}
					this._SubSampleTypeModel.Entity = value;
					if ((value != null))
					{
						value.SubSubSampleTypeModels.Add(this);
						this._SampleTypeNumber = value.SampleTypeNumber;
						this._SubSampleTypeNumber = value.SubSampleTypeNumber;
					}
					else
					{
						this._SampleTypeNumber = default(int);
						this._SubSampleTypeNumber = default(int);
					}
					this.SendPropertyChanged("SubSampleTypeModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
